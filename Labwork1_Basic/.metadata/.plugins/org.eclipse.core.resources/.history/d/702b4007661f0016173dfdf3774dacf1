package co.sabi11.pet.Super;

public class Pet {

	//Attributes
	protected String petType;
	protected String petName;
	protected int petAge;
	private String petFood = "I love to eat some food";
	private String className = "Pet";
	private String food;
	 
	// The protected access modifier allows subclasses
	// to access methods or fields.
	// This is a final method which means it can't be overwritten
	protected final void changeName(String newClassName){
	// this is a reference to the object you're creating
		this.className = newClassName;	         
	}

	protected final String getClassName() {
		
		return this.className;
	}
	
	// Blank Constructor
	public Pet() {}
	

	//Overloaded Constructor
	public Pet(String petType) {
		this.petType = petType;
	}
	
	public Pet(String petName, int petAge) {
		
		this.petName = petName;
		this.petAge = petAge;
	}
	
	public Pet(String petType, String petName, int petAge, String food) {
		
		this.petType = petType;
		this.petName = petName;
		this.petAge = petAge;
		this.food = food;
	}


	public String getPetType() {
		return petType;
	}


	public void setPetType(String petType) {
		this.petType = petType;
	}


	public String getPetName() {
		return petName;
	}


	public void setPetName(String petName) {
		this.petName = petName;
	}


	public int getPetAge() {
		return petAge;
	}


	public void setPetAge(int petAge) {
		this.petAge = petAge;
	}
	
	// Display some dummy content
	public void display() {	
		System.out.println("Pet type:" + petType + " Name: " + petName + " Age: " + petAge);
	}
	
	//Polymorphism and dynamic binding
	public void feedPet() {
		System.out.println(this.className + " : " + petFood);
	}
}
