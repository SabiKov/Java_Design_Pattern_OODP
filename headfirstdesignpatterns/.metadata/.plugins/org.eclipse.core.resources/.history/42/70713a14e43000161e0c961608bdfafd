/**
 * 
 */
package co.sabi11.displays;

import co.sabi11.interfaces.DisplayElement;
import co.sabi11.interfaces.Observer;
import co.sabi11.interfaces.Subject;

/**
 * @author Szabolcs
 *
 */
public class HeatIndexDisplay implements Observer, DisplayElement {

	// Attributes
	private float heatIndex = 0.0f;
	private Subject weatherData;
	
	/**
	 * Constructor 
	 */
	public HeatIndexDisplay(Subject weatherData) {
		this.weatherData = weatherData;
		weatherData.registerObserver(this);
	}

	@Override
	public void update(float temperature, float humidity, float pressure) {
		heatIndex = computeHeatIndex(temperature, humidity);
		display();
	}

	private float computeHeatIndex(float temperature, float humidity) {
		float heatIndex = (float)((16.923 + (0.185212 * temperature) + (5.37941 * humidity) - (0.100254 * temperature * rh) 
				+ (0.00941695 * (temperature * temperature)) + (0.00728898 * (humidity * humidity)) 
				+ (0.000345372 * (t * t * rh)) - (0.000814971 * (temperature * humidity * humidity)) +
				(0.0000102102 * (t * t * rh * rh)) - (0.000038646 * (temperature * temperature * temperature)) + (0.0000291583 * 
				(rh * rh * rh)) + (0.00000142721 * (t * t * t * rh)) + 
				(0.000000197483 * (t * rh * rh * rh)) - (0.0000000218429 * (temperature * temperature * temperature * humidity * humidity)) +
				0.000000000843296 * (t * t * rh * rh * rh)) -
				(0.0000000000481975 * (t * t * t * rh * rh * rh)
		
		return heatIndex;
	}
	
	@Override
	public void display() {
		// TODO Auto-generated method stub
		
	}

}
